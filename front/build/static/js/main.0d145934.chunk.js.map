{"version":3,"sources":["actions/Todo.js","components/card-components/DropdownBtn.js","components/card-components/EmergencyAndImportant.js","components/card-components/Emergency.js","components/card-components/Important.js","components/FormContainer.js","components/MainContainer.js","containers/MainContainer.js","App.js","reducers/Todo.js","index.js","createStore.js"],"names":["API_URL","startRequest","todo","type","payload","receiveData","error","response","finishRequest","DropdownBtn","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChangeColor","selectedPriority","backgroundColor","toggleDropDown","setState","dropdownOpen","state","onRadioBtnClick","selected","handleSetPriority","selectedColor","_this2","react_default","a","createElement","reactstrap_es","isOpen","toggle","size","caret","style","className","onClick","React","Component","EmergencyAndImportant","handleDelete","item","id","handleUpdate","updateText","length","text","priority","value","placeholder","onChange","e","target","card_components_DropdownBtn","Emergency","Important","FormContainer","handleSubmit","addonType","MainContainer","onCreate","onDelete","updatedPriority","onUpdate","tab","activeTab","onMount","react_responsive_default","maxWidth","tabs","classnames","active","tabId","sm","components_FormContainer","emeImpList","map","card_components_EmergencyAndImportant","key","emeList","card_components_Emergency","impList","card_components_Important","minWidth","md","connect","dispatch","_ref","asyncToGenerator","regenerator_default","mark","_callee","getState","wrap","_context","prev","next","axios","get","concat","then","res","console","log","data","posts","reverse","todo_updated","filter","ele","name","catch","err","stop","_x","_x2","apply","arguments","product","_ref2","_callee2","_context2","post","newData","update","todoList","$unshift","_x3","_x4","actions","_ref3","_callee3","_context3","delete","productIndex","findIndex","x","$splice","_x5","_x6","_ref4","_callee4","_context4","put","defineProperty","$set","_x7","_x8","App","containers_MainContainer","initialState","todoReducer","undefined","action","objectSpread","getEmeList","getImpList","store","reduxCreateStore","combineReducers","applyMiddleware","logger","thunk","ReactDOM","render","es","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0d145934.chunk.js","sourcesContent":["import axios from 'axios'\nimport update from 'immutability-helper';\n\n\nconst API_URL = 'https://watarun54.com/api/chat';\n\n//　リクエスト開始\nconst startRequest = todo => ({\n    type: 'START_REQUEST',\n    payload: { todo },\n});\n//　レスポンス受信\nconst receiveData = (error, response) => ({\n    type: 'RECEIVE_DATA',\n    payload: { error, response },\n});\n// リクエスト完了\nconst finishRequest = todo => ({\n    type: 'FINISH_REQUEST',\n    payload: { todo },\n});\n\nexport const fetchList = () => {\n    // getState関数でstate.todoにアクセスする\n    return async (dispatch, getState) => {\n        const todo = getState().todo;\n\n        dispatch(startRequest(todo));\n\n        axios.get(`${API_URL}`)\n            .then(res => {\n                console.log(res.data);\n                const response = res.data.posts;\n                dispatch(receiveData(null, response.reverse()));\n                let todo_updated = response.filter((ele) => {\n                    return (ele.name === 'updated');\n                })\n        \n                console.log(todo_updated);\n            }).catch(err => \n                dispatch(receiveData(err))\n            )\n\n        dispatch(finishRequest(todo));\n    };\n};\n\nexport const createProduct = (product, selectedPriority) => {\n    return async (dispatch, getState) => {\n        const todo = getState().todo;\n\n        axios.post(`${API_URL}`, {text: product, priority:selectedPriority, name: \"created\"})\n            .then((res) => {\n                console.log(res.data);\n                const newData = update(todo.todoList, {$unshift:[res.data.data]})\n                dispatch(receiveData(null, newData));\n                console.log(\"create and set\");\n            }).catch(err => {\n                dispatch(receiveData(err)) \n                console.log(err);   \n            })\n        \n        dispatch(finishRequest(todo));\n    }\n}\n\nexport const deleteProduct = (id) => {\n    return async (dispatch, getState) => {\n        const todo = getState().todo;\n\n        axios.delete(`${API_URL}/${id}`)\n            .then((res) => {\n                const productIndex = todo.todoList.findIndex(x => x.id === id)\n                const newData = update(todo.todoList, {$splice: [[productIndex, 1, ]]})\n                dispatch(receiveData(null, newData));\n                console.log(\"delete and set\");\n            })\n            .catch((err) => {\n                dispatch(receiveData(err));\n            })\n\n        dispatch(finishRequest(todo));\n    }\n}\n\nexport const updateProduct = (id, product, selectedPriority) => {\n    return async (dispatch, getState) => {\n        const todo = getState().todo;\n        axios.put(`${API_URL}/${id}`,{text: product ,priority: selectedPriority, name: \"updated\"})\n            .then((res) => {\n                const productIndex = todo.todoList.findIndex(x => x.id ===id)\n                const newData = update(todo.todoList, {[productIndex]: {$set: res.data.data}})\n                dispatch(receiveData(null, newData));\n                console.log(\"update and set\")\n            })\n            .catch((err) => {\n                dispatch(receiveData(err));\n            })\n        \n        dispatch(finishRequest(todo));\n    }\n}","import React from 'react';\nimport { ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\n\nclass DropdownBtn extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dropdownOpen: false,\n            selectedPriority: this.props.selectedPriority,\n            selectedColor: {},\n        }\n    }\n\n    onChangeColor = (selectedPriority) => {\n        if (selectedPriority === 0) {\n            return {\n                \"backgroundColor\": \"red\"\n            }\n        }\n        if (selectedPriority === 1) {\n            return {\n                \"backgroundColor\": \"yellow\"\n            }\n        }\n        if (selectedPriority === 2) {\n            return {\n                \"backgroundColor\": \"green\"\n            }\n        }\n    }\n\n    componentWillMount() {\n        let selectedColor = this.onChangeColor(this.state.selectedPriority);\n        this.setState({selectedColor: selectedColor});\n    }\n\n    toggleDropDown = () => {\n        this.setState({\n          dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    onRadioBtnClick = (selected) => {\n        this.props.handleSetPriority(selected);\n        let selectedColor = this.onChangeColor(selected);\n        this.setState({selectedColor: selectedColor});\n    }\n\n    render() {\n        return (\n            <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropDown} size=\"sm\">\n                <DropdownToggle caret style={this.state.selectedColor}>\n                    \n                </DropdownToggle>\n                <DropdownMenu>\n                    <DropdownItem className=\"eme-imp-button\" onClick={() => this.onRadioBtnClick(0)}></DropdownItem>\n                    <DropdownItem className=\"eme-button\" onClick={() => this.onRadioBtnClick(1)}></DropdownItem>\n                    <DropdownItem className=\"imp-button\" onClick={() => this.onRadioBtnClick(2)}></DropdownItem>\n                </DropdownMenu>\n            </ButtonDropdown>\n        )\n    }\n}\n\n\nexport default DropdownBtn","import React from 'react';\nimport DropdownBtn from './DropdownBtn';\nimport { Card, CardBody, CardText, FormGroup, Input, Button } from 'reactstrap';\n\n\nclass EmergencyAndImportant extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            updateText: '',\n            selectedPriority: this.props.item.priority\n        }\n    }\n\n    handleDelete = () => {\n        this.props.handleDelete(this.props.item.id);\n    }\n\n    handleUpdate = () => {\n        if (this.state.updateText.length === 0) {\n            this.props.handleUpdate(this.props.item.id, this.props.item.text, this.state.selectedPriority);\n        } else {\n            this.props.handleUpdate(this.props.item.id, this.state.updateText, this.state.selectedPriority);\n        }\n        this.setState({ updateText: '', selectedPriority: this.props.item.priority });\n    }\n\n    handleSetPriority = (selectedPriority) => {\n        this.setState({ selectedPriority: selectedPriority});\n    }\n\n    render() {\n        return (\n            <div>\n                <Card className=\"eme-imp-card\">\n                    <CardBody>\n                        <CardText>{this.props.item.text}</CardText>\n                        <FormGroup>\n                            <Input value={this.state.updateText} placeholder=\"Update task\" onChange={e => this.setState({ updateText: e.target.value })}/>\n                        </FormGroup>\n                        <div>\n                            <DropdownBtn selectedPriority={this.state.selectedPriority} handleSetPriority={this.handleSetPriority}/>{' '}\n                            <Button onClick={this.handleUpdate} size=\"sm\">Update</Button>{' '}\n                            <Button onClick={this.handleDelete} size=\"sm\">Delete</Button>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n      }\n}\n\n\nexport default EmergencyAndImportant","import React from 'react';\nimport DropdownBtn from './DropdownBtn';\nimport { Card, CardBody, CardText, FormGroup, Input, Button } from 'reactstrap';\n\n\nclass Emergency extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            updateText: '',\n            selectedPriority: this.props.item.priority\n        }\n    }\n\n    handleDelete = () => {\n        this.props.handleDelete(this.props.item.id);\n    }\n\n    handleUpdate = () => {\n        if (this.state.updateText.length === 0) {\n            this.props.handleUpdate(this.props.item.id, this.props.item.text, this.state.selectedPriority);\n        } else {\n            this.props.handleUpdate(this.props.item.id, this.state.updateText, this.state.selectedPriority);\n        }\n        this.setState({ updateText: '', selectedPriority: this.props.item.priority });\n    }\n\n    handleSetPriority = (selectedPriority) => {\n        this.setState({ selectedPriority: selectedPriority});\n    }\n\n    render() {\n        return (\n            <div>\n                <Card className=\"eme-card\">\n                    <CardBody>\n                        <CardText>{this.props.item.text}</CardText>\n                        <FormGroup>\n                            <Input value={this.state.updateText} placeholder=\"Update task\" onChange={e => this.setState({ updateText: e.target.value })}/>\n                        </FormGroup>\n                        <div>\n                            <DropdownBtn selectedPriority={this.state.selectedPriority} handleSetPriority={this.handleSetPriority}/>{' '}\n                            <Button onClick={this.handleUpdate} size=\"sm\">Update</Button>{' '}\n                            <Button onClick={this.handleDelete} size=\"sm\">Delete</Button>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n      }\n}\n\n\nexport default Emergency","import React from 'react';\nimport DropdownBtn from './DropdownBtn';\nimport { Card, CardBody, CardText, FormGroup, Input, Button } from 'reactstrap';\n\n\nclass Important extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            updateText: '',\n            selectedPriority: this.props.item.priority\n        }\n    }\n\n    handleDelete = () => {\n        this.props.handleDelete(this.props.item.id);\n    }\n\n    handleUpdate = () => {\n        if (this.state.updateText.length === 0) {\n            this.props.handleUpdate(this.props.item.id, this.props.item.text, this.state.selectedPriority);\n        } else {\n            this.props.handleUpdate(this.props.item.id, this.state.updateText, this.state.selectedPriority);\n        }\n        this.setState({ updateText: '', selectedPriority: this.props.item.priority });\n    }\n\n    handleSetPriority = (selectedPriority) => {\n        this.setState({ selectedPriority: selectedPriority});\n    }\n\n    render() {\n        return (\n            <div>\n                <Card className=\"imp-card\">\n                    <CardBody>\n                        <CardText>{this.props.item.text}</CardText>\n                        <FormGroup>\n                            <Input value={this.state.updateText} placeholder=\"Update task\" onChange={e => this.setState({ updateText: e.target.value })}/>\n                        </FormGroup>\n                        <div>\n                            <DropdownBtn selectedPriority={this.state.selectedPriority} handleSetPriority={this.handleSetPriority}/>{' '}\n                            <Button onClick={this.handleUpdate} size=\"sm\">Update</Button>{' '}\n                            <Button onClick={this.handleDelete} size=\"sm\">Delete</Button>\n                        </div>\n                    </CardBody>\n                </Card>\n            </div>\n        )\n      }\n}\n\n\nexport default Important","import React from 'react';\nimport DropdownBtn from './card-components/DropdownBtn';\nimport { InputGroup, InputGroupAddon, Button, Input} from 'reactstrap'; \n\n\nclass FormContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: '',\n            selectedPriority: 0\n        }\n    }\n\n    handleSubmit = () => {\n        this.props.handleSubmit(this.state.item, this.state.selectedPriority);\n        this.setState({ item: '', selectedPriority: 0 });\n    }\n\n    handleSetPriority = (selectedPriority) => {\n        this.setState({ selectedPriority: selectedPriority});\n    }\n\n    render() {\n        return(\n            <div className=\"new-task-container\">\n                <InputGroup>\n                    <Input value={this.state.item} placeholder=\"New task\" onChange={(e) => this.setState({ item: e.target.value })}/>\n                    <DropdownBtn selectedPriority={this.state.selectedPriority} handleSetPriority={this.handleSetPriority}/>\n                    <InputGroupAddon addonType=\"prepend\"><Button onClick={this.handleSubmit}>Add</Button></InputGroupAddon>\n                </InputGroup>\n            </div>\n        )\n    }\n}\n\nexport default FormContainer","import React from 'react';\nimport EmergencyAndImportant from './card-components/EmergencyAndImportant';\nimport Emergency from \"./card-components/Emergency\";\nimport Important from \"./card-components/Important\";\nimport FormContainer from './FormContainer';\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Container, Row, Col } from 'reactstrap';\nimport MediaQuery from 'react-responsive';\nimport classnames from 'classnames';\n\n\nclass MainContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: '1'\n    }\n  }\n\n  componentWillMount() {\n    this.props.onMount();\n  }\n\n  handleSubmit = (item, selectedPriority) => {\n    this.props.onCreate(item, selectedPriority);\n  }\n\n  handleDelete = (id) => {\n    this.props.onDelete(id);\n  }\n\n  handleUpdate = (id, updateText, updatedPriority) => {\n    this.props.onUpdate(id, updateText, updatedPriority);\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  render() {\n    return (\n        <div>\n          \n\n        <MediaQuery maxWidth={767}>\n        <div className=\"nav-area\">\n        <Nav　tabs>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '1' })}\n              onClick={() => { this.toggle('1'); }}\n            >\n              緊急＆重要\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '2' })}\n              onClick={() => { this.toggle('2'); }}\n            >\n              緊急\n            </NavLink>\n          </NavItem>\n\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === '3' })}\n              onClick={() => { this.toggle('3'); }}\n            >\n              重要\n            </NavLink>\n          </NavItem>\n        </Nav>\n        </div>\n\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n          <div className=\"sp-main-container\">\n            <Container>\n              <Row>\n                <Col sm={12}>\n                <FormContainer handleSubmit={this.handleSubmit} />\n                  <div className=\"itemList\">\n                  {this.props.todo.emeImpList.map((item) => {\n                    return (\n                      <EmergencyAndImportant key={item.id} item={item} handleDelete={this.handleDelete} handleUpdate={this.handleUpdate}/>\n                    )\n                  })}\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n          </TabPane>\n\n          <TabPane tabId=\"2\">\n          <div className=\"sp-main-container\">\n            <Container>\n              <Row>\n                <Col sm={12}>\n                <FormContainer handleSubmit={this.handleSubmit} />\n                  <div className=\"itemList\">\n                  {this.props.todo.emeList.map((item) => {\n                    return (\n                      <Emergency key={item.id} item={item} handleDelete={this.handleDelete} handleUpdate={this.handleUpdate}/>\n                    )\n                  })}\n                  </div>\n                </Col>\n              </Row>\n            </Container>\n          </div>\n          </TabPane>\n\n          <TabPane tabId=\"3\">\n          <div className=\"sp-main-container\">\n            <Container>\n              <Row>\n                <Col sm={12}>\n                <FormContainer handleSubmit={this.handleSubmit} />\n                  <div className=\"itemList\">\n                  {this.props.todo.impList.map((item) => {\n                    return (\n                      <Important key={item.id} item={item} handleDelete={this.handleDelete} handleUpdate={this.handleUpdate}/>\n                    )\n                  })}\n                  </div>\n                </Col>\n              </Row>\n              </Container>\n            </div>\n          </TabPane>\n        </TabContent>\n        </MediaQuery>\n\n\n\n\n        <MediaQuery minWidth={768}>\n        <div className=\"pc-main-container\">\n        <Container>\n        <FormContainer handleSubmit={this.handleSubmit} />\n          <Row>\n            <Col md={4}>\n              <h4>緊急＆重要</h4>\n              <div className=\"itemList\">\n              {this.props.todo.emeImpList.map((item) => {\n                return (\n                  <EmergencyAndImportant key={item.id} item={item} handleDelete={this.handleDelete} handleUpdate={this.handleUpdate}/>\n                )\n              })}\n              </div>\n            </Col>\n            <Col md={4}>\n              <h4>緊急</h4>\n              <div className=\"itemList\">\n              {this.props.todo.emeList.map((item) => {\n                return (\n                  <Emergency key={item.id} item={item} handleDelete={this.handleDelete} handleUpdate={this.handleUpdate}/>\n                )\n              })}\n              </div>\n            </Col>\n            <Col md={4}>\n              <h4>重要</h4>\n              <div className=\"itemList\">\n              {this.props.todo.impList.map((item) => {\n                return (\n                  <Important key={item.id} item={item} handleDelete={this.handleDelete} handleUpdate={this.handleUpdate}/>\n                )\n              })}\n              </div>\n            </Col>\n          </Row>\n        </Container>\n        </div>\n        </MediaQuery>\n\n        </div>\n    );\n  }\n}\n\nexport default MainContainer","import { connect } from 'react-redux';\nimport * as actions from '../actions/Todo';\nimport MainContainer from '../components/MainContainer';\n\n\nconst mapStateToProps = state => {\n  return {\n    todo: state.todo\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onMount: () => {\n        dispatch(actions.fetchList());\n    },\n    onCreate: (item, selectedPriority) => {\n        dispatch(actions.createProduct(item, selectedPriority));\n    },\n    onDelete: (id) => {\n        dispatch(actions.deleteProduct(id));\n    },\n    onUpdate: (id, item, selectedPriority) => {\n        dispatch(actions.updateProduct(id, item, selectedPriority));\n    },\n}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainContainer)\n","import React, { Component } from 'react';\nimport './App.css';\n// import Todo from './components/Todo';\nimport MainContainer from './containers/MainContainer';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <MainContainer />\n      </div>\n    );\n  }\n}\n\nexport default App","const initialState = {\n  todoList: [],\n  emeImpList: [],\n  emeList: [],\n  impList: [],\n}\n\nconst getEmeImpList = (todoList) => {\n  const emeImpList = todoList.filter((ele) => {\n      return (ele.priority === 0);\n    })\n  return emeImpList;\n}\n\nconst getEmeList = (todoList) => {\n  const emeList = todoList.filter((ele) => {\n      return (ele.priority === 1);\n    })\n  return emeList;\n}\n\nconst getImpList = (todoList) => {\n  const impList = todoList.filter((ele) => {\n      return (ele.priority === 2);\n    })\n  return impList;\n}\n\nexport const todoReducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    case 'START_REQUEST':\n      return {\n        todoList: [],\n        emeImpList: [],\n        emeList: [],\n        impList: [],\n        error: false\n      };\n\n    case 'RECEIVE_DATA':\n      return action.payload.error\n        ? { ...state, error: true }\n        : {\n            ...state,\n            todoList: action.payload.response,\n            emeImpList: getEmeImpList(action.payload.response),\n            emeList: getEmeList(action.payload.response),\n            impList: getImpList(action.payload.response),\n        };\n\n    default:\n      return state;\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Provider } from 'react-redux';\nimport createStore from './createStore';\n\nconst store = createStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n","import { createStore as reduxCreateStore, applyMiddleware, combineReducers } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from 'redux-thunk';\nimport { todoReducer } from \"./reducers/Todo\";\n\nexport default function createStore() {\n  const store = reduxCreateStore(\n    combineReducers({\n      todo: todoReducer,\n    }),\n    applyMiddleware(\n      logger,\n      thunk\n    )\n  );\n\n  return store;\n}"],"sourceRoot":""}